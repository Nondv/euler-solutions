;; 2.Even Fibonacci numbers
;;
;; Each new term in the Fibonacci sequence is generated by adding the previous two
;; terms. By starting with 1 and 2, the first 10 terms will be:
;;
;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;;
;; By considering the terms in the Fibonacci sequence whose values do not exceed
;; four million, find the sum of the even-valued terms.

(def fibs
  (loop [result (list 2 1)]
    (let [next-element (reduce + 0 (take 2 result))]
      (if (> next-element 4000000)
        result
        (recur (cons next-element result))))))

(println (reduce #(if (even? %2) (+ %1 %2) %1) 0 fibs))

;; Another solution

(defn fib
  ([] (fib 1 2))
  ([a b] (lazy-seq (cons a (fib b (+ a b))))))

(def result
  (->> (fib)
    (take-while #(<= % 4000000))
    (filter even?)
    (reduce +)))

(println result)
